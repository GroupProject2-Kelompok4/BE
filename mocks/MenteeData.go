// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import (
	mentee "github.com/GroupProject2-Kelompok4/BE/features/mentee"
	mock "github.com/stretchr/testify/mock"
)

// MenteeData is an autogenerated mock type for the MenteeData type
type MenteeData struct {
	mock.Mock
}

// RegisterMentee provides a mock function with given fields: request
func (_m *MenteeData) RegisterMentee(request mentee.MenteeCore) (mentee.MenteeCore, error) {
	ret := _m.Called(request)

	var r0 mentee.MenteeCore
	var r1 error
	if rf, ok := ret.Get(0).(func(mentee.MenteeCore) (mentee.MenteeCore, error)); ok {
		return rf(request)
	}
	if rf, ok := ret.Get(0).(func(mentee.MenteeCore) mentee.MenteeCore); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Get(0).(mentee.MenteeCore)
	}

	if rf, ok := ret.Get(1).(func(mentee.MenteeCore) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMenteeData interface {
	mock.TestingT
	Cleanup(func())
}

// NewMenteeData creates a new instance of MenteeData. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMenteeData(t mockConstructorTestingTNewMenteeData) *MenteeData {
	mock := &MenteeData{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
